<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:a_star.Resources">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SubjectButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkHoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundLightBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" 
                            Text="{TemplateBinding Content}"
                            FontFamily="{TemplateBinding FontFamily}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BGlightHoverBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BGlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style 
        TargetType="{x:Type Button}" 
        x:Key="NoteBodyIdicateButton" 
        BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>

        <Setter Property="ToolTip">
            <Setter.Value>
                <StackPanel>
                    <TextBlock Text="Indicarion of the need of repetition"></TextBlock>
                </StackPanel>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="15"
                        Background="{TemplateBinding Content}">
                        <TextBlock
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontSize="14"
                            FontFamily="{StaticResource FontAwesome}" 
                            Text=""/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BGlightHoverBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style 
        TargetType="{x:Type Button}" 
        x:Key="NoteBodyDropDownButton" 
        BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="15"
                        Background="{TemplateBinding Background}">
                        <TextBlock
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontSize="14"
                            FontFamily="{DynamicResource FontAwesome}" 
                            Text="&#xf103;"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
        TargetType="{x:Type Button}" 
        x:Key="NoteBodyAttachButton" 
        BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{DynamicResource BGlightestBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource BGdarkBrush}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="15"
                        Background="{TemplateBinding Background}">
                        <TextBlock
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontSize="16"
                            FontFamily="{StaticResource FontAwesome}" 
                            Text="&#xf0c6;"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BGlightestHoverBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style 
        TargetType="{x:Type Button}" 
        x:Key="OkButton" 
        BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{DynamicResource BGlightestBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource BGlightBrush}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="15"
                        Background="{TemplateBinding Background}">
                        <TextBlock
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontSize="14"
                            FontFamily="{StaticResource FontAwesome}" 
                            Text="&#xf00c;"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BGlightestHoverBrush}"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource BGlightestBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LogInButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="{DynamicResource fontSizeMedium}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True"
                            Margin="0 5"
                            Padding="5"
                            CornerRadius="15">
                        <TextBlock 
                            x:Name="textblock"
                            Text="{TemplateBinding Content}" 
                            Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkestBrush}"></Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkHoverBrush}"/>
                            <Setter Property="Foreground" TargetName="textblock" Value="{DynamicResource BGdarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PopUpButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True"
                            Margin="{TemplateBinding Padding}"
                            Padding="5"
                            CornerRadius="15">
                        <TextBlock 
                            x:Name="textblock"
                            Text="{TemplateBinding Content}" 
                            Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkestBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkestBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkHoverBrush}"/>
                            <Setter Property="Foreground" TargetName="textblock" Value="{DynamicResource BGdarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderlessButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{DynamicResource fontSizelarge}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="{DynamicResource BGdarkHoverBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundLightBrush}"/>
        <Setter Property="Tag" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border" 
                            CornerRadius="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Viewbox>
                                <TextBlock
                                    x:Name="textblock"
                                    Text="{TemplateBinding Content}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Margin="{TemplateBinding Padding}"
                                    Background="Transparent"
                                    Foreground="{TemplateBinding Foreground}"/>
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkestBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkestBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{DynamicResource fontSizeNormal}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Background" Value="{DynamicResource BGdarkHoverBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundLightBrush}"/>
        <Setter Property="Tag" Value="0"/>
        <Setter Property="Focusable" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border" 
                            CornerRadius="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Viewbox>
                                <TextBlock
                                    x:Name="textblock"
                                    Text="{TemplateBinding Content}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Margin="{TemplateBinding Padding}"
                                    Background="Transparent"
                                    Foreground="{TemplateBinding Foreground}"/>
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BGdarkestBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>