<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:a_star.Resources">

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}" x:Key="Headertext">
        <Setter Property="Foreground" Value="{DynamicResource BGlightestBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 6"/>
    </Style>

    <!-- Titles -->
    <Style x:Key="TitleBox" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}"/>
    </Style>

    <Style x:Key="MultilineTextBlock" 
           TargetType="{x:Type TextBlock}" 
           BasedOn="{StaticResource BaseTextBlockStyle}">

        <Setter Property="FontSize" Value="{DynamicResource fontSizeMedium}"/>
        <Setter Property="FontFamily" Value="Segio UI"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="EditableTextBlock" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{DynamicResource fontSizeMedium}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border 
                        x:Name="border"
                        BorderThickness="0"
                        Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                        Padding="0 0 0 0"
                        BorderBrush="{DynamicResource BlueHighlightBrush}">
                        <ScrollViewer 
                            x:Name="PART_ContentHost"
                            Focusable="False" 
                            HorizontalScrollBarVisibility="Hidden" 
                            VerticalScrollBarVisibility="Hidden"/>

                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="False">
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                            <Setter Property="Padding" TargetName="border" Value="7,2,2,2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Multiline textbox with placeholder (tag property) -->
    <Style x:Key="MultilineTextbox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{DynamicResource fontSizeMedium}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUI}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{DynamicResource BGlightBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid x:Name="container">
                        <Border x:Name="border"
                                Padding="5 0 0 0"
                                CornerRadius="15"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer 
                                x:Name="PART_ContentHost"
                                Focusable="False" 
                                HorizontalScrollBarVisibility="Hidden" 
                                VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource SegoeUI}"
                                   Padding="15 0 0 0"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{TemplateBinding Foreground}">

                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding ActualHeight, ElementName=container}" Value="50">
                                            <Setter Property="VerticalAlignment" Value="Top"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- login TextBox -->
    <Style x:Key="TextBoxLogIn" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource fontSizeMedium}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUI}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundDarkBrush}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{DynamicResource BGlightBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundMainBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border x:Name="border"
                                CornerRadius="15"
                                BorderBrush="{DynamicResource BlueHighlightBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer 
                                x:Name="PART_ContentHost"
                                Focusable="False" 
                                HorizontalScrollBarVisibility="Hidden" 
                                VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource SegoeUI}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{TemplateBinding Foreground}">

                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="False">
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                            <Setter Property="Padding" TargetName="border" Value="7,2,2,2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Multiline textbox with placeholder (tag property) -->
    <Style x:Key="FancyRichTextbox" TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Border 
                        x:Name="border"
                        BorderThickness="0"
                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                        CornerRadius="15"
                        Margin="{Binding Margin, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}">
                        <RichTextBox
                              x:Name="rTextBox"
                              
                              Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                              CaretBrush="{Binding CaretBrush, RelativeSource={RelativeSource TemplatedParent}}"
                              Focusable="{Binding Focusable, RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                              FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                              Background="Transparent"
                              BorderThickness="0" 
                              AcceptsTab="True"
                              ClipToBounds="True">

                        </RichTextBox>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" SourceName="rTextBox" Value="true">
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect
                                        ShadowDepth="0"
                                        Color="{DynamicResource BlueHighlight}"
                                        Opacity="1"
                                        BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" SourceName="rTextBox" Value="False">
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                            <Setter Property="Padding" TargetName="border" Value="2 2 2 2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>